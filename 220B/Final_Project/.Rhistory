next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
#lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol = 0.1)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol = 0.01)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol = 0)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', spar=0.0001)
}
}
?smooth.spline
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol=10)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol=100)
}
}
plmso(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
Hmisc::plmso(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
plsmo(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
iCol
is.factor(pharmacy_data[iCol])
pharmacy_data$sex <- factor(pharmacy_data$sex, labels = c('M','F'))
pharmacy_data$lp <- factor(pharmacy_data$lp, labels = c('uncovered','covered'))
pharmacy_data$fp <- factor(pharmacy_data$fp, labels = c('nonprivatePharm','privatePharm'))
pharmacy_data$fr <- factor(pharmacy_data$fr, labels = c('nonprivate','private'))
pharmacy_data$ch1 <- factor(pharmacy_data$ch1, labels = c('nonChronic1','chronicNoLim'))
pharmacy_data$ch2 <- factor(pharmacy_data$ch2, labels = c('nonChronic2','chronicLim'))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(GGally)
library(dplyr)
library(ggpubr)
#Change working directory depending if on Mac vs Windows
tryCatch({
setwd("/Users/owner/Desktop/PSTAT")},
error = function(e) {
print('Path for Mac working directory not found, trying Windows...')
setwd("D:/PSTAT/")})
pharmacy_data <- read.table("pharmacist.txt",header = T)
#inspect first few rows
head(pharmacy_data)
library(reshape2)
long_df=melt(pharmacy_data)
kernel_plots <- ggplot(long_df, aes(value, colour = variable)) +
geom_density(aes(fill=variable),alpha = 0.1)+
facet_wrap(~variable, scales = "free") +
labs(color = 'Subject\nResponses') + guides(fill=F) +
theme(text = element_text(size = 12))
kernel_plots
cov.boxs <- ggplot(stack(pharmacy_data), aes(x = ind, y = values, fill = ind)) +
geom_boxplot(outlier.color = 'red', alpha = 0.4) + facet_wrap(~ind, scales = 'free')+
theme(legend.position = "none", axis.title = element_blank(), text = element_text(size = 15))
cov.boxs
library(Hmisc)
my_fn <- function(data, mapping, pts=list(), smt=list(), ...){
ggplot(data = data, mapping = mapping, ...) +
do.call(geom_point, pts) +
do.call(geom_smooth, smt)
}
#p-values of correlations
rcorr(as.matrix(pharmacy_data), type = c('pearson'))
all_corr <- ggcorr(pharmacy_data, geom = "tile", label = T, hjust = .8, size = 5, color = "grey50")
# only plot the interesting correlations between pc, age, ad
p1 <- ggplot(pharmacy_data, aes(x = pc, y = age)) +
geom_point() + geom_smooth(method = 'lm', se = F, size = 1.2, color = 'red', alpha = 0.5)+
labs(title = 'PC vs Age') + theme_classic() + theme(plot.title = element_text(hjust = 0.5))
p2 <- ggplot(pharmacy_data, aes(x = pc, y = ad)) +
geom_point() + geom_smooth(method = 'lm', se = F, size = 1.2, color = 'green', alpha = 0.5) +
labs(title = 'PC vs Ad') + theme_classic() +  theme(plot.title = element_text(hjust = 0.5))
p3 <- ggplot(pharmacy_data, aes(x = ad, y = age)) +
geom_point() + geom_smooth(method = 'lm', se = F, size = 1.2, color = 'blue', alpha = 0.5) +
labs(title = 'Ad vs Age') + theme_classic() +  theme(plot.title = element_text(hjust = 0.5))
int_corr <- ggarrange(all_corr,p1,p2,p3, nrow = 2, ncol = 2)
annotate_figure(int_corr, top =text_grob ("Correlations Between Survey Measures", face = "bold", size = 14))
fit1 <- glm(pc ~ ., family = 'poisson', data = pharmacy_data)
summary(fit1)
#check phi for over dispersion
rp <- residuals(fit1,type = 'pearson') #phi tilde numerator
phi_hat <- fit1$deviance/fit1$df.residual
phi_tilde <- sum(rp^2)/fit1$df.residual
fit1.phi <- as.data.frame(cbind('hat'=phi_hat,'tilde'=phi_tilde))
fit1.phi
#check for overdispersion using residuals
fv <- fitted(fit1)
par(mfrow = c(1,2))
plot(log(fv), rp, xlab = expression(log(hat(mu))),
ylab = "Pearson Resids")
plot(log(fv), log(residuals(fit1, type = 'response')^2), xlab = expression(log(hat(mu))),
ylab = expression(log(y - hat(mu))^2))
abline(0,1)
library(MASS)
fit2 <- stepAIC(fit1, direction = 'both',trace =F)
summary(fit2)
anova(fit1,fit2, test = 'Chi')
pharmacy_data$sex <- factor(pharmacy_data$sex, labels = c('M','F'))
pharmacy_data$lp <- factor(pharmacy_data$lp, labels = c('uncovered','covered'))
pharmacy_data$fp <- factor(pharmacy_data$fp, labels = c('nonprivatePharm','privatePharm'))
pharmacy_data$fr <- factor(pharmacy_data$fr, labels = c('nonprivate','private'))
pharmacy_data$ch1 <- factor(pharmacy_data$ch1, labels = c('nonChronic1','chronicNoLim'))
pharmacy_data$ch2 <- factor(pharmacy_data$ch2, labels = c('nonChronic2','chronicLim'))
fit3 <- glm(pc ~ ., data = pharmacy_data, family = 'poisson')
summary(fit3)
fit3.2 <- stepAIC(fit3, direction = 'both',trace = F)
summary(fit3.2)
anova(fit2,fit3.2, test = 'Chisq')
fit4 <- stepAIC(fit1, ~ .^2, direction = 'both', trace = F)
summary(fit4)
anova(fit2,fit4, test = 'Chi')
rp <- residuals(fit4,type = 'pearson') #phi tilde numerator
phi_hat <- fit4$deviance/fit4$df.residual
phi_tilde <- sum(rp^2)/fit4$df.residual
fit4.phi <- as.data.frame(cbind('hat'=phi_hat,'tilde'=phi_tilde))
fit4.phi
#check for overdispersion using residuals
fv <- fitted(fit4)
par(mfrow = c(1,2))
plot(log(fv), rp, xlab = expression(log(hat(mu))),
ylab = "Pearson Resids")
plot(log(fv), log(residuals(fit4, type = 'response')^2), xlab = expression(log(hat(mu))),
ylab = expression(log(y - hat(mu))^2))
abline(0,1)
library(boot)
glm.diag.plots(fit4)
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (is.factor(pharmacy_data[iCol])){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol=100)
}
}
iCol
is.factor(pharmacy_data[iCol])
is.factor(pharmacy_data['sex'])
sapply(pharmacy_data,is.factor)
apply(pharmacy_data['sex'],is.factor)
sapply(pharmacy_data['sex'],is.factor)
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (sapply(pharmacy_data[iCol], is.factor)){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol=100)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (sapply(pharmacy_data[iCol], is.factor)){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials')
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red', tol=100)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (sapply(pharmacy_data[iCol], is.factor)){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials')
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (sapply(pharmacy_data[iCol], is.factor)){
boxplot(pharmacy_data[iCol], fit4.partials[,col_pos], ylab='partials')
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (sapply(pharmacy_data[iCol], is.factor)){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials')
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red')
}
}
f <- sapply(pharmacy_data, is.factor)
f['sex']
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials')
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red')
}
}
levels(pharmacy_data$iCol)
levels(pharmacy_data[iCol])
labels(pharmacy_data[iCol])
class(pharmacy_data$sex)
levels(pharmacy_data$sex)
levels(pharmacy_data['sex'])
levels(pharmacy_data[,'sex'])
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlab=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlabels=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), color = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', xlabels=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', labels=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red')
}
}
boxplot(pharmacy_data$sex, fit4.partials[,1])
boxplot(pharmacy_data$sex, fit4.partials[,1], labels = levels(pharmacy_data$sex))
boxplot(pharmacy_data$sex, fit4.partials[,1], xlabels = levels(pharmacy_data$sex))
boxplot(pharmacy_data$sex, fit4.partials[,1], xlabels = c(levels(pharmacy_data$sex)))
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', names=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', names=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
#lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red')
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', names=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red', tol = 10000)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', names=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red', tol = 10000, lwd = 2)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', names=levels(pharmacy_data[,iCol]))
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red', tol = 10000, lwd = 2,
lty = 2)
}
}
fit4.partials <- residuals(fit4,type = 'partial')
f <- sapply(pharmacy_data, is.factor)
#par(mfrow = c(5,4))
for (iCol in colnames(pharmacy_data)){
col_pos <- match(iCol, colnames(fit4.partials))
if (is.na(col_pos)){
next
}
if (f[iCol]){
boxplot(pharmacy_data[,iCol], fit4.partials[,col_pos], ylab='partials', names=levels(pharmacy_data[,iCol]), xlab = iCol)
} else {
plot(pharmacy_data[,iCol],fit4.partials[,col_pos], ylab='partials', xlab = iCol)
lines(smooth.spline(pharmacy_data[,iCol],fit4.partials[,iCol]), col = 'red', tol = 10000, lwd = 2,
lty = 2)
}
}
colnames(fit4)
colnames(fit4.partials)
plot(fv,pharmacy_data['pc'], type = 'l')
plot(fv, pharmacy_data[,'pc'], type = 'l')
plot(fv, pharmacy_data[,'pc'])
plot(fv, pharmacy_data[,'pc'], ylab = 'pc', xlab = 'fitted values')
plot(fv, log(pharmacy_data[,'pc']), ylab = 'pc', xlab = 'fitted values')
plot(fv, log(pharmacy_data[,'pc']), ylab = 'log(pc)', xlab = 'fitted values')
lines(smooth.spline(fv,log(pharmacy_data[,'pc])))
plot(fv, log(pharmacy_data[,'pc']), ylab = 'log(pc)', xlab = 'fitted values')
lines(smooth.spline(fv,log(pharmacy_data[,'pc'])), col = 'red')
plot(fv, log(pharmacy_data[,'pc']), ylab = 'log(pc)', xlab = 'fitted values')
lines(smooth.spline(fv,log(pharmacy_data[,'pc'])), col = 'red')
plot(exp(fv), pharmacy_data[,'pc'], ylab = 'pc', xlab = 'exp(fitted values)')
lines(smooth.spline(exp(fv),pharmacy_data[,'pc']), col = 'red')
plot(exp(fv), pharmacy_data[,'pc'], ylab = 'pc', xlab = 'exp(fitted values)')
lines(smooth.spline(exp(fv),pharmacy_data[,'pc']), col = 'red', lwd = 2)
exp(fv)
pc
pharmacy_data['pc']
exp(fv)
fv
max(exp(fv))
plot(exp(fv), pharmacy_data[,'pc'], ylab = 'pc', xlab = 'exp(fitted values)')
lines(smooth.spline(exp(fv),pharmacy_data[,'pc']), col = 'red', lwd = 2)
identify
identify()
indentify(exp(fv), pharmacy_data[,'pc'])
indentify(exp(fv), pharmacy_data[,'pc'])
?identify
identify(exp(fv),pharmacy_data[,'pc'])
plot(exp(fv), pharmacy_data[,'pc'], ylab = 'pc', xlab = 'exp(fitted values)')
lines(smooth.spline(exp(fv),pharmacy_data[,'pc']), col = 'red', lwd = 2)
indentify(exp(fv), pharmacy_data[,'pc'], labels = name)
plot(exp(fv), pharmacy_data[,'pc'], ylab = 'pc', xlab = 'exp(fitted values)')
lines(smooth.spline(exp(fv),pharmacy_data[,'pc']), col = 'red', lwd = 2)
identify(exp(fv), pharmacy_data[,'pc'], labels = name)
plot(exp(fv), pharmacy_data[,'pc'], ylab = 'pc', xlab = 'exp(fitted values)')
lines(smooth.spline(exp(fv),pharmacy_data[,'pc']), col = 'red', lwd = 2)
identify(exp(fv), pharmacy_data[,'pc'], labels = name)
